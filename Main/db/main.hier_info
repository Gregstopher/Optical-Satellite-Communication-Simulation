|main
CLOCK_50 => CLOCK_50.IN2
leds[0] <= decode7:decode7_0.leds[0]
leds[1] <= decode7:decode7_0.leds[1]
leds[2] <= decode7:decode7_0.leds[2]
leds[3] <= decode7:decode7_0.leds[3]
leds[4] <= decode7:decode7_0.leds[4]
leds[5] <= decode7:decode7_0.leds[5]
leds[6] <= decode7:decode7_0.leds[6]
leds[7] <= decode7:decode7_0.leds[7]
ct[0] <= decode2:decode2_0.ct[0]
ct[1] <= decode2:decode2_0.ct[1]
ct[2] <= decode2:decode2_0.ct[2]
ct[3] <= decode2:decode2_0.ct[3]
GPIO_0[0] <= siggen:siggen_0.out_bit
data_input => data_input.IN1
s1 => s1.IN2
s2 => s2.IN1


|main|decode2:decode2_0
digit[0] => Decoder0.IN1
digit[1] => Decoder0.IN0
ct[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
ct[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
ct[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
ct[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|main|decode7:decode7_0
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
leds[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
leds[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
leds[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
leds[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
leds[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
leds[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
leds[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
leds[7] <= <GND>


|main|freqgen:freqgen_0
freq[0] => increment[1].DATAIN
freq[1] => increment[2].DATAIN
freq[2] => increment[3].DATAIN
freq[3] => increment[4].DATAIN
freq[4] => increment[5].DATAIN
freq[5] => increment[6].DATAIN
freq[6] => increment[7].DATAIN
freq[7] => increment[8].DATAIN
freq[8] => increment[9].DATAIN
freq[9] => increment[10].DATAIN
freq[10] => increment[11].DATAIN
freq[11] => increment[12].DATAIN
freq[12] => increment[13].DATAIN
freq[13] => increment[14].DATAIN
freq[14] => increment[15].DATAIN
freq[15] => increment[16].DATAIN
freq[16] => increment[17].DATAIN
freq[17] => increment[18].DATAIN
freq[18] => increment[19].DATAIN
freq[19] => increment[20].DATAIN
freq[20] => increment[21].DATAIN
freq[21] => increment[22].DATAIN
freq[22] => increment[23].DATAIN
freq[23] => increment[24].DATAIN
freq[24] => increment[25].DATAIN
freq[25] => increment[26].DATAIN
freq[26] => increment[27].DATAIN
freq[27] => increment[28].DATAIN
freq[28] => increment[29].DATAIN
freq[29] => increment[30].DATAIN
freq[30] => increment[31].DATAIN
freq[31] => ~NO_FANOUT~
new_freq <= new_freq~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => new_freq~reg0.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => count[15].ACLR
reset_n => count[16].ACLR
reset_n => count[17].ACLR
reset_n => count[18].ACLR
reset_n => count[19].ACLR
reset_n => count[20].ACLR
reset_n => count[21].ACLR
reset_n => count[22].ACLR
reset_n => count[23].ACLR
reset_n => count[24].ACLR
reset_n => count[25].ACLR
reset_n => count[26].ACLR
reset_n => count[27].ACLR
reset_n => count[28].ACLR
reset_n => count[29].ACLR
reset_n => count[30].ACLR
reset_n => count[31].ACLR
reset_n => increment[0].ENA
reset_n => increment[31].ENA
reset_n => increment[30].ENA
reset_n => increment[29].ENA
reset_n => increment[28].ENA
reset_n => increment[27].ENA
reset_n => increment[26].ENA
reset_n => increment[25].ENA
reset_n => increment[24].ENA
reset_n => increment[23].ENA
reset_n => increment[22].ENA
reset_n => increment[21].ENA
reset_n => increment[20].ENA
reset_n => increment[19].ENA
reset_n => increment[18].ENA
reset_n => increment[17].ENA
reset_n => increment[16].ENA
reset_n => increment[15].ENA
reset_n => increment[14].ENA
reset_n => increment[13].ENA
reset_n => increment[12].ENA
reset_n => increment[11].ENA
reset_n => increment[10].ENA
reset_n => increment[9].ENA
reset_n => increment[8].ENA
reset_n => increment[7].ENA
reset_n => increment[6].ENA
reset_n => increment[5].ENA
reset_n => increment[4].ENA
reset_n => increment[3].ENA
reset_n => increment[2].ENA
reset_n => increment[1].ENA
clk => increment[0].CLK
clk => increment[1].CLK
clk => increment[2].CLK
clk => increment[3].CLK
clk => increment[4].CLK
clk => increment[5].CLK
clk => increment[6].CLK
clk => increment[7].CLK
clk => increment[8].CLK
clk => increment[9].CLK
clk => increment[10].CLK
clk => increment[11].CLK
clk => increment[12].CLK
clk => increment[13].CLK
clk => increment[14].CLK
clk => increment[15].CLK
clk => increment[16].CLK
clk => increment[17].CLK
clk => increment[18].CLK
clk => increment[19].CLK
clk => increment[20].CLK
clk => increment[21].CLK
clk => increment[22].CLK
clk => increment[23].CLK
clk => increment[24].CLK
clk => increment[25].CLK
clk => increment[26].CLK
clk => increment[27].CLK
clk => increment[28].CLK
clk => increment[29].CLK
clk => increment[30].CLK
clk => increment[31].CLK
clk => new_freq~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK


|main|siggen:siggen_0
pattern[0] => Mux0.IN7
pattern[1] => Mux0.IN6
pattern[2] => Mux0.IN5
pattern[3] => Mux0.IN4
pattern[4] => Mux0.IN3
pattern[5] => Mux0.IN2
pattern[6] => Mux0.IN1
pattern[7] => Mux0.IN0
clk => index[0].CLK
clk => index[1].CLK
clk => index[2].CLK
clk => state~1.DATAIN
rst_n => index[0].ACLR
rst_n => index[1].ACLR
rst_n => index[2].ACLR
rst_n => state~3.DATAIN
out_bit <= Selector0.DB_MAX_OUTPUT_PORT_TYPE


|main|uart_rx:uart_rx_0
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => rx_shift_reg[0].CLK
clk => rx_shift_reg[1].CLK
clk => rx_shift_reg[2].CLK
clk => rx_shift_reg[3].CLK
clk => rx_shift_reg[4].CLK
clk => rx_shift_reg[5].CLK
clk => rx_shift_reg[6].CLK
clk => rx_shift_reg[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => tick_count[0].CLK
clk => tick_count[1].CLK
clk => tick_count[2].CLK
clk => tick_count[3].CLK
clk => tick_count[4].CLK
clk => tick_count[5].CLK
clk => tick_count[6].CLK
clk => tick_count[7].CLK
clk => tick_count[8].CLK
clk => tick_count[9].CLK
clk => tick_count[10].CLK
clk => tick_count[11].CLK
clk => tick_count[12].CLK
clk => tick_count[13].CLK
clk => tick_count[14].CLK
clk => tick_count[15].CLK
clk => tick_count[16].CLK
clk => tick_count[17].CLK
clk => tick_count[18].CLK
clk => tick_count[19].CLK
clk => tick_count[20].CLK
clk => tick_count[21].CLK
clk => tick_count[22].CLK
clk => rx_sync_1_prev.CLK
clk => rx_sync_1.CLK
clk => rx_sync_0.CLK
clk => state~1.DATAIN
rst_n => tick_count[0].ACLR
rst_n => tick_count[1].ACLR
rst_n => tick_count[2].ACLR
rst_n => tick_count[3].ACLR
rst_n => tick_count[4].ACLR
rst_n => tick_count[5].ACLR
rst_n => tick_count[6].ACLR
rst_n => tick_count[7].ACLR
rst_n => tick_count[8].ACLR
rst_n => tick_count[9].ACLR
rst_n => tick_count[10].ACLR
rst_n => tick_count[11].ACLR
rst_n => tick_count[12].ACLR
rst_n => tick_count[13].ACLR
rst_n => tick_count[14].ACLR
rst_n => tick_count[15].ACLR
rst_n => tick_count[16].ACLR
rst_n => tick_count[17].ACLR
rst_n => tick_count[18].ACLR
rst_n => tick_count[19].ACLR
rst_n => tick_count[20].ACLR
rst_n => tick_count[21].ACLR
rst_n => tick_count[22].ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
rst_n => data[4]~reg0.ACLR
rst_n => data[5]~reg0.ACLR
rst_n => data[6]~reg0.ACLR
rst_n => data[7]~reg0.ACLR
rst_n => rx_shift_reg[0].ACLR
rst_n => rx_shift_reg[1].ACLR
rst_n => rx_shift_reg[2].ACLR
rst_n => rx_shift_reg[3].ACLR
rst_n => rx_shift_reg[4].ACLR
rst_n => rx_shift_reg[5].ACLR
rst_n => rx_shift_reg[6].ACLR
rst_n => rx_shift_reg[7].ACLR
rst_n => bit_count[0].ACLR
rst_n => bit_count[1].ACLR
rst_n => bit_count[2].ACLR
rst_n => state~3.DATAIN
rx_serial => rx_sync_0.DATAIN
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid.DB_MAX_OUTPUT_PORT_TYPE


